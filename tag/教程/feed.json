{
    "version": "https://jsonfeed.org/version/1",
    "title": "liuliAI • All posts by \"教程\" tag",
    "description": "",
    "home_page_url": "https://liuliai.github.io",
    "items": [
        {
            "id": "https://liuliai.github.io/2024/07/01/RCL%E5%AE%9E%E9%AA%8C%E5%AE%A4Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/",
            "url": "https://liuliai.github.io/2024/07/01/RCL%E5%AE%9E%E9%AA%8C%E5%AE%A4Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/",
            "title": "RCL实验室Linux服务器操作手册",
            "date_published": "2024-07-01T03:59:00.000Z",
            "content_html": "<h2>RCL实验室Linux服务器操作手册</h2>\n仅供东北大学机器人科学与工程学院<strong>机器人认知实验室（Robot Cognition Lab，RCL）</strong>成员使用。\n<p>RCL 实验室官网见<a href=\"http://neurcl.cn/index.html\" target=\"_blank\" rel=\"noopener\"><strong><font color=\"LimeGreen\">此处</font></strong></a>，感兴趣获取更多详细信息。</p>\n<h4>账号申请方法</h4>\n<p>联系目前服务器管理员 <a href=\"http://tencent://message/?uin=791037420&amp;Site=https://liuliai.github.io/&amp;Menu=yes\" target=\"_blank\" rel=\"noopener\"><strong><font color=\"LimeGreen\">QQ</font></strong></a></p>\n<h4>服务器介绍</h4>\n<h5>服务器IP地址：172.17.27.232</h5>\n<table>\n  <tr>\n    <th align=\"center\">Device</th>\n    <th align=\"center\">Parameter</th>\n  </tr>\n  <tr>\n    <td align=\"center\">CPU</td>\n    <td align=\"center\">2*Intel(R) Xeon(R) Silver 4314 CPU @ 2.40GHz</td>\n  </tr>\n  <tr>\n    <td align=\"center\">GPU</td>\n    <td align=\"center\">8*NVIDIA GeForce RTX 3090</td>\n  </tr>\n  <tr>\n    <td rowspan=\"2\">ROM</td>\n    <td align=\"center\">2*Intel® SSD D3-S4510 Series 480GB</td>\n  </tr>\n  <tr>\n    <td align=\"center\">2*Intel® SSD D3-S4510 Series 3.84TB</td>\n  </tr>\n</table>\n<ul>\n<li>所有存储设备均采用 RAID 1 镜像配置，确保数据冗余与安全性</li>\n<li>操作系统版本为 Ubuntu 18.04.6 LTS</li>\n<li>CUDA 版本为 12.1</li>\n</ul>\n<h5>服务器IP地址：172.17.27.194</h5>\n<table border=\"1\">\n  <tr>\n    <th align=\"center\">Device</th>\n    <th align=\"center\">Parameter</th>\n  </tr>\n  <tr>\n    <td align=\"center\">CPU</td>\n    <td align=\"center\">2*Intel(R) Xeon(R) Silver 4314 CPU @ 2.40GHz</td>\n  </tr>\n  <tr>\n    <td align=\"center\">GPU</td>\n    <td align=\"center\">8*NVIDIA GeForce RTX 3090</td>\n  </tr>\n  <tr>\n    <td align=\"center\" rowspan=\"3\">ROM</td>\n    <td align=\"center\">2*Intel® SSD D3-S4510 Series 480GB</td>\n  </tr>\n  <tr>\n    <td align=\"center\">2*Intel® SSD D3-S4510 Series 3.84TB</td>\n  </tr>\n  <tr>\n    <td align=\"center\">2*致态 SC001 XT SATA SSD 2TB</td>\n  </tr>\n</table>\n<ul>\n<li>致态 SC001 XT SATA SSD 2TB 采用 RAID 0 条带化配置，优化读写性能</li>\n<li>其余存储设备采用 RAID 1 镜像配置，确保数据冗余与安全性</li>\n<li>操作系统版本为 Ubuntu 18.04.6 LTS</li>\n<li>CUDA 版本为 11.8</li>\n</ul>\n<h4>登陆方法</h4>\n目前是校内分配的ip，校外是无法访问的。\n<p>①使用校园网 (每个月免费 10G，凌晨 0:00-6:00 免费)，校园网具体资费标准见 <a href=\"https://ipgw.neu.edu.cn\" target=\"_blank\" rel=\"noopener\" style=\"color: LimeGreen;\">此处</a>。</p>\n<p>②使用 OpenVPN，使用学号和手机号验证码登陆，详细介绍在 <a href=\"http://xwb.neu.edu.cn/10185/list.htm\" target=\"_blank\" rel=\"noopener\" style=\"color: LimeGreen;\">此处</a>。</p>\n<h5>命令行使用</h5>\n在 Windows 系统中，使用\"win+R\"快捷键，输入\"cmd\"，然后回车输入ssh user@hostname 或者ssh -l user hostname ，输入密码即可。\n<p>ssh 登录服务器的命令如下。ssh 默认连接服务器的 22 端口，-p 参数可以指定其他端口。<br>\n <code>$ ssh hostname </code> <br>\n上面命令中，hostname 是主机名，它可以是域名，也可能是 IP 地址或局域网内部的主机名（对于 RCL 实验室，为 172.17.27.194 或者 172.17.27.232）。不指定用户名的情况下，将使用客户端的当前用户名，作为远程服务器的登录用户名。如果要指定用户名，可以采用下面的命令。<br>\n <code>$ ssh user@hostname </code> <br>\n上面的命令中，用户名和主机名写在一起了，之间使用 @分隔。用户名也可以使用 ssh 的 - l 参数指定，这样的话，用户名和主机名就不用写在一起了。<br>\n <code>$ ssh -l user hostname </code></p>\n<h5>图形界面使用</h5>\n首先下载VNC，在此处<a href=\"https://www.realvnc.com/en/connect/download/viewer/windows/\" target=\"_blank\" rel=\"noopener\" style=\"color: LimeGreen;\">官网</a>下载，或者<a href=\"https://pan.baidu.com/s/1qyTUfb-U2HPKqmGyg_GupQ?pwd=qn4o\" target=\"_blank\" rel=\"noopener\" style=\"color: LimeGreen;\">百度网盘</a>。\n<p>然后输入 IP 地址和端口号 (端口号为最后两位，以 63 为例)<br>\n<img src=\"/image/RCL-linux-fig1.jpg\" alt=\"\"><br>\n 点击 continue<br>\n<img src=\"/image/RCL-linux-fig2.jpg\" alt=\"\"><br>\n 输入默认密码 123456 即可<br>\n<img src=\"/image/RCL-linux-fig3.jpg\" alt=\"\"></p>\n<h4>传输文件</h4>\n①在本地cmd上，可以直接通过scp命令传输文件和文件夹。\n<p>从本地上传到服务器，如果想要把文件夹整个上传到服务器，那么加上参数 - r 即可。</p>\n<p><code>$ scp [-r] {local_file_path} {user}@{hostname}:{remote_file_path}</code></p>\n<p>从远程下载到本地</p>\n<p><code>$ scp [-r] {user}@{hostname}:{remote_file_path} {local_file_path}</code></p>\n<p>详细使用信息见  <a href=\"https://www.runoob.com/linux/linux-comm-scp.html\" target=\"_blank\" rel=\"noopener\"><strong><font color=\"LimeGreen\">此处</font></strong></a></p>\n<p>②使用 ftp 工具 WinSCP 或者 FileZilla<br>\n 参考教程 <a href=\"https://blog.csdn.net/qq_26383975/article/details/120220823\" target=\"_blank\" rel=\"noopener\"><strong><font color=\"LimeGreen\">文件传输工具 WinSCP 下载安装教程</font></strong></a>和<a href=\"https://blog.csdn.net/weixin_45309916/article/details/107782070\" target=\"_blank\" rel=\"noopener\"><strong><font color=\"LimeGreen\">FileZilla 的下载与安装以及简单使用（有图解超简单）</font></strong></a></p>\n<h4>文件系统介绍</h4>\n目前每人的账号默认分配在home中（容量较小），请将数据集，conda环境创建在data(自动备份)或者bigdata(有需要请自行备份)中进行。\n<p><strong>如有疑问请评论。</strong></p>\n",
            "tags": [
                "Linux",
                "教程",
                "服务器"
            ]
        },
        {
            "id": "https://liuliai.github.io/2024/06/15/Linux%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/",
            "url": "https://liuliai.github.io/2024/06/15/Linux%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/",
            "title": "Linux 常用命令简单介绍",
            "date_published": "2024-06-15T03:59:00.000Z",
            "content_html": "<p>##Linux 常用命令简单介绍<br>\n与 Windows 的直观图形界面相比，Linux 的命令行界面显得有些抽象，尤其是对于初涉 Linux 的朋友，每当遇到新的 Linux 命令，我们通常会花费时间在搜索引擎上查找相关的使用说明。这样的过程既耗时又繁琐。因此，我整理了一些 Linux 的基础命令，作为我学习 Linux 过程中的一个备忘录。同时也希望能够为那些想要深入探索 Linux 世界的读者提供一些帮助。</p>\n<pre><code>def nextGreaterElement(self, nums1: List[int], nums2: List[int]) -&gt; List[int]:\n    idx &#x3D; {x: i for i, x in enumerate(nums1)}\n    ans &#x3D; [-1] * len(nums1)\n    st &#x3D; []\n    for x in reversed(nums2):\n        while st and x &gt;&#x3D; st[-1]:\n            # 由于 x 的出现，栈顶元素永远不会是左边元素的「下一个更大元素」\n            st.pop()\n        if st and x in idx:  # x 在 nums1 中\n            ans[idx[x]] &#x3D; st[-1]  # 记录答案\n        st.append(x)\n    return ans</code></pre>\n<h4 id=\"apt-get-ubuntu系统包管理器\"><a class=\"markdownIt-Anchor\" href=\"#apt-get-ubuntu系统包管理器\">#</a> apt-get   Ubuntu 系统包管理器</h4>\n<h5 id=\"命令\"><a class=\"markdownIt-Anchor\" href=\"#命令\">#</a> 命令:</h5>\n<p>update - 检索 新的包列表<br>\n upgrade - 升级 可更新的所有软件包<br>\n install - 安装 新软件包（pkg 是 libc6 不是 libc6.deb）<br>\nremove - 删除 软件包<br>\n autoremove - 自动删除 所有未使用的软件包<br>\n purge - 删除 软件包和配置文件<br>\n clean - 清除 已下载的归档文件<br>\n autoclean - 清除 旧的下载的档案文件<br>\n check - 验证 是否有损坏的依赖<br>\n download - 下载 二进制包到当前目录</p>\n<h5 id=\"选项\"><a class=\"markdownIt-Anchor\" href=\"#选项\">#</a> 选项：</h5>\n<p>-q ：不输出任何信息<br>\n - qq ：除了错误之外，没有输出<br>\n - d ：仅下载，不要安装或解压缩存档<br>\n - y ：对所有确定询问都选择 Yes，并且不提示<br>\n - f ：尝试纠正 被破坏依赖关系的系统<br>\n - m ：如果存档是可定位的，则尝试继续<br>\n - u ：显示升级包的列表<br>\n - b ：在获取源代码包后构建源包</p>\n<h6 id=\"检索-新的包列表\"><a class=\"markdownIt-Anchor\" href=\"#检索-新的包列表\">#</a> 检索 新的包列表</h6>\n<p>apt-get update</p>\n<h6 id=\"升级-可更新的所有软件包注意这个命令会升级所有的软件包所以会升级很长时间\"><a class=\"markdownIt-Anchor\" href=\"#升级-可更新的所有软件包注意这个命令会升级所有的软件包所以会升级很长时间\">#</a> 升级 可更新的所有软件包（注意这个命令会升级所有的软件包，所以会升级很长时间）</h6>\n<p>apt-get upgrade</p>\n<h6 id=\"安装-nginx-软件包\"><a class=\"markdownIt-Anchor\" href=\"#安装-nginx-软件包\">#</a> 安装 Nginx 软件包</h6>\n<p>apt-get install nginx</p>\n<h6 id=\"卸载-nginx-软件包\"><a class=\"markdownIt-Anchor\" href=\"#卸载-nginx-软件包\">#</a> 卸载 Nginx 软件包</h6>\n<p>apt-get remove nginx</p>\n<h6 id=\"卸载-nginx-软件包-并删除所有相关配置文件\"><a class=\"markdownIt-Anchor\" href=\"#卸载-nginx-软件包-并删除所有相关配置文件\">#</a> 卸载 Nginx 软件包 并删除所有相关配置文件</h6>\n<p>apt-get remove --purge nginx</p>\n<h6 id=\"在安装软件和卸载的时候为了避免误操作都会询问是否继续每次都要输入-y-来确定会很麻烦可以加上-y-参数\"><a class=\"markdownIt-Anchor\" href=\"#在安装软件和卸载的时候为了避免误操作都会询问是否继续每次都要输入-y-来确定会很麻烦可以加上-y-参数\">#</a> 在安装软件和卸载的时候，为了避免误操作，都会询问是否继续，每次都要输入 y 来确定会很麻烦，可以加上 -y 参数</h6>\n<h6 id=\"安装-nginx-软件包-并不显示确定提示\"><a class=\"markdownIt-Anchor\" href=\"#安装-nginx-软件包-并不显示确定提示\">#</a> 安装 Nginx 软件包 并不显示确定提示</h6>\n<p>apt-get install nginx -y</p>\n<h6 id=\"卸载-nginx-软件包删除所有相关配置文件-并不显示提示\"><a class=\"markdownIt-Anchor\" href=\"#卸载-nginx-软件包删除所有相关配置文件-并不显示提示\">#</a> 卸载 Nginx 软件包，删除所有相关配置文件 并不显示提示</h6>\n<p>apt-get remove --purge nginx -y</p>\n<h6 id=\"清除-旧的无用-的软件包\"><a class=\"markdownIt-Anchor\" href=\"#清除-旧的无用-的软件包\">#</a> 清除 旧的 / 无用 的软件包</h6>\n<p>apt-get clean &amp;&amp; apt-get autoclean</p>\n<h6 id=\"下载-nginx-二进制软件包到当前目录但不解压和安装\"><a class=\"markdownIt-Anchor\" href=\"#下载-nginx-二进制软件包到当前目录但不解压和安装\">#</a> 下载 Nginx 二进制软件包到当前目录，但不解压和安装</h6>\n<p>apt-get download nginx -d</p>\n<h6 id=\"更多的命令可以用-apt-get-help-查看\"><a class=\"markdownIt-Anchor\" href=\"#更多的命令可以用-apt-get-help-查看\">#</a> 更多的命令可以用 apt-get --help 查看。</h6>\n<h6 id=\"mkdir-新建文件夹\"><a class=\"markdownIt-Anchor\" href=\"#mkdir-新建文件夹\">#</a> mkdir 新建文件夹</h6>\n<h6 id=\"在当前文件夹新建一个-bash-文件夹\"><a class=\"markdownIt-Anchor\" href=\"#在当前文件夹新建一个-bash-文件夹\">#</a> 在当前文件夹新建一个 bash 文件夹</h6>\n<p>mkdir bash</p>\n<h6 id=\"更多的命令可以用-mkdir-help-查看\"><a class=\"markdownIt-Anchor\" href=\"#更多的命令可以用-mkdir-help-查看\">#</a> 更多的命令可以用 mkdir --help 查看。</h6>\n<h5>cd 进入文件夹</h5>\n###### 一般结合ll(小写L)命令使用(全称：ls -l)，输出当前目录下的所有目录，然后使用cd命令跳转到某个目录\n###### 例如当前为起始/root目录中 ，跳转到 /root/data\ncd data\n<h6 id=\"也可以多次跳转输入目录的绝对路径因此也可用作返回目录\"><a class=\"markdownIt-Anchor\" href=\"#也可以多次跳转输入目录的绝对路径因此也可用作返回目录\">#</a> 也可以多次跳转，输入目录的绝对路径（因此也可用作返回目录）</h6>\n<p>cd /root/data/user/models/</p>\n<h6 id=\"值得注意的是在windows中的cmd使用cd命令时切换不同磁盘的目录时需要额外增加-d\"><a class=\"markdownIt-Anchor\" href=\"#值得注意的是在windows中的cmd使用cd命令时切换不同磁盘的目录时需要额外增加-d\">#</a> 值得注意的是，在 Windows 中的 CMD 使用 cd 命令时，切换不同磁盘的目录时，需要额外增加 /d</h6>\n<p>cd /d D:\\Program Files\\PycharmProjects\\experiment</p>\n<h6 id=\"返回上级目录\"><a class=\"markdownIt-Anchor\" href=\"#返回上级目录\">#</a> 返回上级目录</h6>\n<p>cd …</p>\n<h5>cp 复制或重命名文件/文件夹</h5>\n###### 复制当前目录内的 log.txt文件到 /var目录\ncp log.txt /var/log.txt\n<h6 id=\"复制当前目录内的-bash文件夹到-home目录\"><a class=\"markdownIt-Anchor\" href=\"#复制当前目录内的-bash文件夹到-home目录\">#</a> 复制当前目录内的 bash 文件夹到 /home 目录</h6>\n<p>cp -R bash /home/bash</p>\n<h6 id=\"复制当前目录内的所有txt后缀的文件到-varlog目录\"><a class=\"markdownIt-Anchor\" href=\"#复制当前目录内的所有txt后缀的文件到-varlog目录\">#</a> 复制当前目录内的所有.txt 后缀的文件到 /var/log 目录</h6>\n<p>cp *.txt /var/log</p>\n<h6 id=\"复制当前目录内的所有以-sy1a-5uva-4q3n开头的文件到-varlog目录\"><a class=\"markdownIt-Anchor\" href=\"#复制当前目录内的所有以-sy1a-5uva-4q3n开头的文件到-varlog目录\">#</a> 复制当前目录内的所有以 SY1A-5UVA-4Q3N 开头的文件到 /var/log 目录</h6>\n<p>cp SY1A-5UVA-4Q3N* /var/log</p>\n<h6 id=\"复制当前目录内的所有以-sy1a-5uva-4q3n开头-以txt后缀结尾的文件到-varlog目录\"><a class=\"markdownIt-Anchor\" href=\"#复制当前目录内的所有以-sy1a-5uva-4q3n开头-以txt后缀结尾的文件到-varlog目录\">#</a> 复制当前目录内的所有以 SY1A-5UVA-4Q3N 开头 以.txt 后缀结尾的文件到 /var/log 目录</h6>\n<p>cp SY1A-5UVA-4Q3N*.txt /var/log</p>\n<h6 id=\"假设当前目录是-rootuserlog要把这个目录中的所有txt后缀的文件复制到上一级目录-rootuser那么这样做\"><a class=\"markdownIt-Anchor\" href=\"#假设当前目录是-rootuserlog要把这个目录中的所有txt后缀的文件复制到上一级目录-rootuser那么这样做\">#</a> 假设当前目录是 /root/user/log，要把这个目录中的所有.txt 后缀的文件复制到上一级目录 /root/user，那么这样做</h6>\n<p>cp *.txt …</p>\n<h6 id=\"就是相对路径代表上一级目录当然你也可以用绝对路径这样更不容易出错\"><a class=\"markdownIt-Anchor\" href=\"#就是相对路径代表上一级目录当然你也可以用绝对路径这样更不容易出错\">#</a> … 就是相对路径，代表上一级目录，当然你也可以用绝对路径，这样更不容易出错</h6>\n<p>cp *.txt /root/user</p>\n<h6 id=\"重命名当前目录内的-logtxt文件为-log2txt\"><a class=\"markdownIt-Anchor\" href=\"#重命名当前目录内的-logtxt文件为-log2txt\">#</a> 重命名当前目录内的 log.txt 文件为 log2.txt</h6>\n<p>cp log.txt log2.txt</p>\n<h6 id=\"复制当前目录内的-logtxt文件到-var目录并重命名为-log1txt\"><a class=\"markdownIt-Anchor\" href=\"#复制当前目录内的-logtxt文件到-var目录并重命名为-log1txt\">#</a> 复制当前目录内的 log.txt 文件到 /var 目录并重命名为 log1.txt</h6>\n<p>cp log.txt /var/log1.txt</p>\n<h6 id=\"复制当前目录内的-bash文件夹到-home目录并重命名为-bash2\"><a class=\"markdownIt-Anchor\" href=\"#复制当前目录内的-bash文件夹到-home目录并重命名为-bash2\">#</a> 复制当前目录内的 bash 文件夹到 /home 目录并重命名为 bash2</h6>\n<p>cp -R bash /home/bash2</p>\n<h6 id=\"复制当前目录内的-logtxt文件到-var目录但是-var-目录中已经存着-logtxt那么会提示-cp-overwrite-varlogtxt-可以用-f-强制覆盖\"><a class=\"markdownIt-Anchor\" href=\"#复制当前目录内的-logtxt文件到-var目录但是-var-目录中已经存着-logtxt那么会提示-cp-overwrite-varlogtxt-可以用-f-强制覆盖\">#</a> 复制当前目录内的 log.txt 文件到 /var 目录，但是 /var 目录中已经存着 log.txt，那么会提示 cp: overwrite `/var/log.txt’? 可以用 -f 强制覆盖</h6>\n<p>cp -f log /var/log.txt</p>\n<h6 id=\"大家可能会发现当你使用-cp-f-强制覆盖的时候依然会询问你是否覆盖这是因为-cp-为了避免你手误默认加上了-i-参数该参数代表每次覆盖必须询问\"><a class=\"markdownIt-Anchor\" href=\"#大家可能会发现当你使用-cp-f-强制覆盖的时候依然会询问你是否覆盖这是因为-cp-为了避免你手误默认加上了-i-参数该参数代表每次覆盖必须询问\">#</a> 大家可能会发现，当你使用 cp -f 强制覆盖的时候，依然会询问你是否覆盖，这是因为 CP 为了避免你手误，默认加上了 -i 参数（该参数代表每次覆盖必须询问）。</h6>\n<h6 id=\"所以想要避免-cp-默认的-i-参数只需要在-cp-命令前面加上斜杠即可\"><a class=\"markdownIt-Anchor\" href=\"#所以想要避免-cp-默认的-i-参数只需要在-cp-命令前面加上斜杠即可\">#</a> 所以想要避免 CP 默认的 -i 参数，只需要在 CP 命令前面加上斜杠即可 “/”</h6>\n<p>/cp -f log /var/log.txt</p>\n<p>####### 复制当前目录内的 log.txt log1.txt log2.txt 文件和 log233 目录到 /home/log 目录中<br>\n cp -R log.txt log1.txt log2.txt log233 /home/log</p>\n<p>####### 更多的命令可以用 cp --help 查看。</p>\n<h5>mv 移动或重命名文件/文件夹</h5>\n####### 移动当前目录内的 log.txt文件到 /var目录\nmv log.txt /var/log.txt\n<p>####### 移动当前目录内的 bash 文件夹到 /home 目录<br>\n mv bash /home/bash</p>\n<p>####### 重命名当前目录内的 log.txt 文件为 log2.txt<br>\nmv log.txt log2.txt</p>\n<p>####### 复制当前目录内的 log.txt 文件到 /var 目录并重命名为 log1.txt<br>\nmv log.txt /var/log1.txt</p>\n<p>####### 复制当前目录内的 bash 文件夹到 /home 目录并重命名为 bash2<br>\nmv bash /home/bash2</p>\n<p>####### 更多的命令可以用 mv --help 查看。</p>\n<h5>rm 删除文件/文件夹</h5>\n####### 删除当前目录下的 log.txt文件\nrm log.txt\n<p>####### 删除当前目录下所有.txt 后缀的文件<br>\n rm *.txt</p>\n<p>####### 使用 rm 命令删除时，会提示你是否确定删除，输入 y 即删除，输入 n 则取消<br>\n ####### rm: remove regular file `log.txt’? y</p>\n<p>####### 删除当前目录下所有.txt 后缀的文件<br>\n rm *.txt</p>\n<p>####### 删除当前目录下所有以 SY1A-5UVA-4Q3N 开头的文件<br>\n rm SY1A-5UVA-4Q3N*</p>\n<p>####### 删除当前目录下所有以 SY1A-5UVA-4Q3N 开头 以.txt 后缀结尾的文件<br>\n rm SY1A-5UVA-4Q3N*.txt</p>\n<p>####### 当你用 rm 删除目录的时候会发现提示这不是一个文件<br>\n ####### rm bash<br>\n####### rm: cannot remove `bash’: Is a directory<br>\n####### 可以加上 -r 来归递删除目录及其目录下的内容<br>\n rm -r bash</p>\n<p>####### 因为为了避免手误删除错误，所以 rm 默认是加上了 -i 的参数，也就是每一次删除文件 / 目录都会提示，如果觉得烦可以用 -rf 参数<br>\n rm -rf bash</p>\n<p>####### rm -rf 这个命令请慎重使用，而且千万不要使用 rm -rf / 或者 rm -rf /* 之类的命令 (系统自杀)，可能会让你系统爆炸，所以使用请慎重！</p>\n<p>####### 更多的命令可以用 rm --help 查看。</p>\n<h5>ls 显示目录中文件（l为小写L）</h5>\n####### 显示当前目录下的所有文件, -a代表“all”，这个命令会列出目录中的所有文件，包括以点（.）开头的隐藏文件。它不会显示文件的详细信息，只会显示文件名。\nls -a\n<p>####### 它不仅显示文件名，还显示文件的权限、所有者、大小、最后修改日期等详细信息。<br>\nls -l</p>\n<p>####### 命令后面加上 绝对路径 / 相对路径 就会显示指定文件夹内的所有文件<br>\n ls -a bash/log</p>\n<p>####### 相对路径，当前目录是 /root ，欲查看的目录是 /root/bash/log<br>\nls -a /root/bash/log</p>\n<p>####### 绝对路径， 当前目录是 /root ，欲查看的目录是 /root/bash/log</p>\n<p>####### 更多的命令可以用 ls --help 来查看。</p>\n<h5>du 查看文件/文件夹占用磁盘空间的大小</h5>\n参数介绍：\n-h ：以人类易读的方式显示\n-a ：显示 目录占用的磁盘空间大小，并显示其下目录和文件占用磁盘空间的大小\n-s ：显示 目录占用的磁盘空间大小，但不显示其下子目录和文件占用的磁盘空间大小\n-c ：显示几个目录或文件占用的磁盘空间大小，还要统计它们的总和\n--apparent-size：显示目录或文件自身的大小\n-l ：统计硬链接占用磁盘空间的大小\n-L ：统计符号链接所指向的文件占用的磁盘空间大小\n<p>####### 假设当前位于 /root 目录下，则显示 /root 文件夹的大小，但不显示其子目录和文件的大小<br>\n du -sh</p>\n<p>####### 假设当前位于 /root 目录下，则显示 /root 文件夹的大小，并显示其子目录和文件的大小<br>\n du -ah</p>\n<p>####### 假设当前位于 /root 目录下，则显示 /root 文件夹下的所有文件夹的大小及其总和<br>\n du -lh --max-depth=1</p>\n<p>####### 更多的命令可以用 du --help 来查看。</p>\n<h5>cat 查看文件内容</h5>\n假设 log.txt文件的内容为：\n<p>SY1A-5UVA-4Q3N233<br>\nSY1A-5UVA-4Q3N</p>\n<p>SY1A-5UVA-4Q3N666</p>\n<p>SY1A-5UVA-4Q3N2366<br>\nSY1A-5UVA-4Q3N8888<br>\n 查看文件：</p>\n<p>####### 查看 log.txt 文件的所有内容<br>\n cat log.txt<br>\n####### 输出示例如下<br>\n SY1A-5UVA-4Q3N233<br>\nSY1A-5UVA-4Q3N</p>\n<p>SY1A-5UVA-4Q3N666</p>\n<p>SY1A-5UVA-4Q3N2366<br>\nSY1A-5UVA-4Q3N8888</p>\n<p>####### 查看 log.txt 文件的所有内容，并对所有行编号<br>\n cat -n log.txt<br>\n####### 输出示例如下：<br>\n1\tSY1A-5UVA-4Q3N233<br>\n2\tSY1A-5UVA-4Q3N<br>\n3\t<br>\n4\t<br>\n5\tSY1A-5UVA-4Q3N666<br>\n6\t<br>\n7\tSY1A-5UVA-4Q3N2366<br>\n8\tSY1A-5UVA-4Q3N8888</p>\n<p>####### 查看 log.txt 文件的所有内容，并对非空行编号<br>\n cat -b log.txt<br>\n####### 输出示例如下：<br>\n1\tSY1A-5UVA-4Q3N233<br>\n2\tSY1A-5UVA-4Q3N</p>\n<pre><code> 3\tSY1A-5UVA-4Q3N666\n\n 4\tSY1A-5UVA-4Q3N2366\n 5\tSY1A-5UVA-4Q3N8888\n</code></pre>\n<p>####### 查看 log.txt 文件的所有内容，并对非空行编号，且不输出多行空行<br>\n cat -bs log.txt<br>\n####### 输出示例如下：<br>\n1\tSY1A-5UVA-4Q3N233<br>\n2\tSY1A-5UVA-4Q3N</p>\n<pre><code> 3\tSY1A-5UVA-4Q3N666\n\n 4\tSY1A-5UVA-4Q3N2366\n 5\tSY1A-5UVA-4Q3N8888\n</code></pre>\n<p>清空文件：</p>\n<p>####### 清空当前目录中的 log.txt 文件<br>\n cat /dev/null &gt; log.txt</p>\n<p>####### 清空 /var 目录中的 log.txt 文件<br>\n cat /dev/null &gt; /var/log.txt<br>\n 写入文件：</p>\n<p>####### 写入文本到当前目录中的 log.txt 文件中 (加入文本到文件内容最后)<br>\ncat &gt;&gt; log.txt &lt;&lt;-EOF<br>\nSY1A-5UVA-4Q3N<br>\nSY1A-5UVA-4Q3N233<br>\nSY1A-5UVA-4Q3N666<br>\nEOF</p>\n<p>####### 清空文件并写入文本到 /var 目录中的 log.txt 文件中 (先清空后写入)<br>\ncat &gt; /var/log.txt &lt;&lt;-EOF<br>\nSY1A-5UVA-4Q3N<br>\nSY1A-5UVA-4Q3N233<br>\nSY1A-5UVA-4Q3N666<br>\nEOF</p>\n<p>####### 更多的命令可以用 cat --help 来查看。</p>\n<h5>VI、VIM 编辑文件内容</h5>\n####### 打开当前目录下的 log.txt文件，如果没有那么会新建 log.txt文件（安装vim后，使用 vi和 vim打开文件没区别）\nvi log.txt\nvim log.txt\n####### 在命令行模式下，直接输入以下 符号和字母(区分大小写)\n#进入编辑模式（插入模式，按 Esc键 即可返回命令行模式）\ni\n####### 删除光标当前所在的一行\ndd\n####### 删除文件内所有内容\ndddG\n####### 复制光标当前所在的一行\nyy\n####### 粘贴刚才复制的一行内容\np\n####### 撤销上个操作（误操作可以用这个恢复）\nu\n####### 保存当前文件（ : 是英文的冒号）\n:w\n####### 另存当前文件内容为 log2.txt\n:w log2.txt\n####### 退出当前文件\n:q\n####### 不保存 并强制退出当前文件\n:q!\n####### 保存并退出当前文件\n:wq\n<p>####### 更多的命令可以用 vi --help /vim --help 来查看。</p>\n<h5>wget 下载工具</h5>\n参数介绍：\n<p>####### 只介绍最常用的参数<br>\n ####### 如果提示命令不存在，那么使用 yum install wget -y /apt-get install wget -y 来安装（有一些非常精简的系统可能会没装）</p>\n<p>-b ：启动后，后台下载<br>\n - q ：安静模式（不输出任何信息）<br>\n-c ：断点续传下载文件<br>\n - O ：指定下载后的文件名（可使用绝对路径目录 + 文件名）<br>\n-P ：指定下载后的文件目录（-P 只能指定下载目录，并不能指定文件名）<br>\n-t ：设置重试次数（0 代表无限）<br>\n-T ：设置超时时间（单位：秒）<br>\n-N ：只获取比本地新的文件（新的覆盖旧的）<br>\n-4 ：仅连接至 IPv4 地址<br>\n - 6 ：仅连接至 IPv6 地址<br>\n–limit-rate=xxxk : 限制下载速度（k 代表 KB/S）<br>\n–post-data ：通过 POST 方式发送数据<br>\n–no-check-certificate ：不验证服务器的 SSL 证书</p>\n<p>####### 下载一个文件到当前目录<br>\n wget <a href=\"https://yun.doubibackup.com/100MB.bin\" target=\"_blank\" rel=\"noopener\">https://yun.doubibackup.com/100MB.bin</a></p>\n<p>####### 下载文件到当前目录并重命名为 200MB.bin<br>\nwget -O “200MB.bin” <a href=\"https://yun.doubibackup.com/100MB.bin\" target=\"_blank\" rel=\"noopener\">https://yun.doubibackup.com/100MB.bin</a></p>\n<p>####### 下载文件到 /root 目录（-P 只能指定下载目录，并不能指定文件名）<br>\nwget -P “/root” <a href=\"https://yun.doubibackup.com/100MB.bin\" target=\"_blank\" rel=\"noopener\">https://yun.doubibackup.com/100MB.bin</a></p>\n<p>####### 下载文件到 /root/doubi 目录并重命名为 200MB.bin<br>\nwget -O “/root/doubi/200MB.bin” <a href=\"https://yun.doubibackup.com/100MB.bin\" target=\"_blank\" rel=\"noopener\">https://yun.doubibackup.com/100MB.bin</a></p>\n<p>####### 下载文件完成之前 wget 进程结束了，那么可以使用断点续传重新下载中断的文件（前提是下载服务器支持断点续传）<br>\nwget -c <a href=\"https://yun.doubibackup.com/100MB.bin\" target=\"_blank\" rel=\"noopener\">https://yun.doubibackup.com/100MB.bin</a></p>\n<p>####### 通过后台下载文件到 /root/doubi 目录并重命名为 200MB.bin<br>\nwget -b -O “/root/doubi/200MB.bin” <a href=\"https://yun.doubibackup.com/100MB.bin\" target=\"_blank\" rel=\"noopener\">https://yun.doubibackup.com/100MB.bin</a><br>\n####### Continuing in background, pid 2333.<br>\n####### Output will be written to `wget-log’.<br>\n####### 后台下后，你可以使用以下命令来查看下载进度：<br>\ntail -f wget-log</p>\n<p>####### 有时候一些 Linux 系统中的 SSL 证书不完整，会导致下载一些 HTTPS 网站文件的时候会验证 SSL 证书失败，可以这样做<br>\n ####### 不验证服务器 SSL 证书，下载文件到当前目录并重命名为 200MB.bin<br>\nwget --no-check-certificate -O “200MB.bin” <a href=\"https://yun.doubibackup.com/100MB.bin\" target=\"_blank\" rel=\"noopener\">https://yun.doubibackup.com/100MB.bin</a></p>\n<p>####### 使用 wget 发送 POST 请求数据<br>\n wget --post-data “user=doubi&amp;passwd=23333” <a href=\"https://xxx.xx/\" target=\"_blank\" rel=\"noopener\">https://xxx.xx/</a></p>\n<p>####### 下载文件到当前目录 并仅通过 IPv4 连接 只获取比本地新的文件，限速 200KB/S<br>\nwget --limit-rate=200k -N -4 <a href=\"https://yun.doubibackup.com/100MB.bin\" target=\"_blank\" rel=\"noopener\">https://yun.doubibackup.com/100MB.bin</a></p>\n<p>####### 下载文件到当前目录 并重试次数为 1，超时时间为 2 秒<br>\n wget -t1 -T2 <a href=\"https://yun.doubibackup.com/100MB.bin\" target=\"_blank\" rel=\"noopener\">https://yun.doubibackup.com/100MB.bin</a></p>\n<p>####### 通过 wget 来获取服务器的外网 IP（-qO- 代表运行完会输出下载的信息，并不会保存到本地文件）<br>\nwget -qO- <a href=\"http://ipinfo.io/ip\" target=\"_blank\" rel=\"noopener\">ipinfo.io/ip</a></p>\n<p>####### 更多的命令可以用 wget --help 来查看。</p>\n",
            "tags": [
                "Linux",
                "教程"
            ]
        }
    ]
}