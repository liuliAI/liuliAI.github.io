{
    "version": "https://jsonfeed.org/version/1",
    "title": "liuliAI • All posts by \"数学\" category",
    "description": "",
    "home_page_url": "https://liuliai.github.io",
    "items": [
        {
            "id": "https://liuliai.github.io/2024/01/11/%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90%E5%92%8C%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/",
            "url": "https://liuliai.github.io/2024/01/11/%E7%9F%A9%E9%98%B5%E5%88%86%E6%9E%90%E5%92%8C%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/",
            "title": "矩阵分析和数值分析",
            "date_published": "2024-01-11T03:59:00.000Z",
            "content_html": "<p>记录我学矩阵和数值的那些坑</p>\n<p>####TODO</p>\n",
            "tags": [
                "数学",
                "矩阵分析",
                "数值分析"
            ]
        },
        {
            "id": "https://liuliai.github.io/2023/12/09/%E6%A6%82%E7%8E%87%E6%9C%BA%E5%99%A8%E4%BA%BA-SALM/",
            "url": "https://liuliai.github.io/2023/12/09/%E6%A6%82%E7%8E%87%E6%9C%BA%E5%99%A8%E4%BA%BA-SALM/",
            "title": "概率机器人-SALM",
            "date_published": "2023-12-09T03:59:00.000Z",
            "content_html": "<p>记录下这门折磨的全英授课形式的课程，英语水平直线上升（但也是我所有课程中最高的成绩 - 97，）。同时推荐一下方老师，方老师是国内 SALM 领域中的大牛，从零几年到现在一直深耕，发表多篇顶会。 最经典的 SALM 十四讲也是好起来了，能请到方老师作序。（学 SALM 的人必看，犹如西瓜书、花书在深度学习的地位），而且方老师会带学生 DeBug，技术能力也超强。不禁让我回想起本科双语教学的最优化理论及方法，同样的大佬，同样的哀嚎一片的学生。<br>\n<img src=\"/image/salm.png\" alt=\"\"><br>\n上课偷拍<br>\n<video width=\"320\" height=\"240\" controls></p>\n  <source src=\"/image/salm.mp4\" type=\"video/mp4\">\n  您的浏览器不支持 HTML5 视频。\n</video>\n<p>这是使用期末作业，使用 Jupyter 完成，有需要的，初学 SALM 的可以留言找我领取资料。<br>\n<img src=\"/image/homework.jpg\" alt=\"\"><br>\n<img src=\"/image/homework2.jpg\" alt=\"\"><br>\n<img src=\"/image/homework1.jpg\" alt=\"\"><br>\n<img src=\"/image/homework3.jpg\" alt=\"\"></p>\n",
            "tags": [
                "概率机器人",
                "SALM"
            ]
        },
        {
            "id": "https://liuliai.github.io/2023/12/09/%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%94%B5%E5%B7%A5%E6%9D%AF%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B/",
            "url": "https://liuliai.github.io/2023/12/09/%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%94%B5%E5%B7%A5%E6%9D%AF%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%AB%9E%E8%B5%9B/",
            "title": "第十四届全国大学生电工杯数学建模竞赛",
            "date_published": "2023-12-09T03:59:00.000Z",
            "content_html": "<p>没有哪次竞赛比这次更累了，建模、编程、论文三合一，加班加点的通宵，比完直接躺了两天。当然，对于自己各方面的提升也是巨大的，最后也是不负众望，和室友、班长共同努力下取得了一等奖。<br>\n<img src=\"/image/dgb.png\" alt=\"\"></p>\n<p>B 题如下<br>\n<img src=\"/image/dgb2.jpg\" alt=\"\"></p>\n<p>第一问很简单是可重复访问的 TSP 问题，有多种方法，例如多次 Dijkstra + 剪枝优化，暴力枚举 + 剪枝优化（<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">!</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n!)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">!</span><span class=\"mclose\">)</span></span></span></span>），遗传算法，状压 DP（状态压缩动态规划，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>⋅</mo><msup><mn>2</mn><mi>n</mi></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^{2}\\cdot 2^{n})</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span>）等等。由于数量级问题，遗传算法大概 2 分钟，其他算法不推荐。<br>\n状压 DP 代码如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">import sys\n\ndef tsp(dp, mask, pos, dist, n):\n    # 如果所有城市都访问过，返回当前位置到起点的距离\n    if mask &#x3D;&#x3D; (1 &lt;&lt; n) - 1:\n        return dist[pos][0]\n    \n    # 如果这个状态已经计算过，直接返回结果\n    if dp[mask][pos] !&#x3D; -1:\n        return dp[mask][pos]\n    \n    ans &#x3D; sys.maxsize\n    # 尝试访问每个城市\n    for i in range(n):\n        # 如果这个城市还没有被访问过\n        if (mask &amp; (1 &lt;&lt; i)) &#x3D;&#x3D; 0:\n            # 计算通过这个城市到下一个城市的新路径长度\n            newAns &#x3D; dist[pos][i] + tsp(dp, mask | (1 &lt;&lt; i), i, dist, n)\n            ans &#x3D; min(ans, newAns)\n    \n    # 记录并返回当前状态的最短路径长度\n    dp[mask][pos] &#x3D; ans\n    return ans<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>第二问复杂的多，改进遗传算法，增加一条代表无人机路径的染色体并且由于无人机载重限制，同一地点可能需要重复飞行，将配送地点当日物资需求量利用阶跃函数和取整函数进行分界设置为无人机染色体中该地点基因的权重，由此控制变异之后该地点基因出现概率。得出完成一次整体配送的最优方案时间。</p>\n<p>第三问延续第二问进行二次改进，设置配送车辆染色体 9 号基因的权重为较大值，即可使配送车辆染色体以较大的变异概率出现 9 号基因，即中途返回出发地，得出完成一次整体配送最优方案时间。</p>\n<p>第四问由于计划设置两个应急物资集中地点，因此使用 K-median 聚类方法进行聚类，同时，将各地点当日物资需求量作为聚类点集权重，聚类得出两个应急物资中心点为地点 5 和地点 25，且将图分为两部分，之后使用问题三中改进的遗传算法计算两次，分别得出两个应急物资点完成一次整体配送的最优方案。</p>\n",
            "tags": [
                "数学建模",
                "电工杯",
                "遗传算法",
                "状压DP",
                "TSP旅行商"
            ]
        },
        {
            "id": "https://liuliai.github.io/2023/11/20/%E5%9B%9B%E5%85%83%E6%95%B0%E4%B8%8E%E4%B8%87%E5%90%91%E9%94%81/",
            "url": "https://liuliai.github.io/2023/11/20/%E5%9B%9B%E5%85%83%E6%95%B0%E4%B8%8E%E4%B8%87%E5%90%91%E9%94%81/",
            "title": "四元数与万向锁",
            "date_published": "2023-11-20T03:59:00.000Z",
            "content_html": "<p>最近的学习中关于四元数和万象锁出现的频率比较高，因此认真学习了，做个笔记。</p>\n<p>在正式讨论之前，我们需要了解一些基础概念。譬如<a href=\"https://baike.baidu.com/item/%E6%AC%A7%E6%8B%89%E8%A7%92/1626212\" style=\"color: LimeGreen;\">欧拉角</a>。<br>\n<img src=\"/image/ol.png\" alt=\"蓝色的轴是xyz-轴，红色的轴是XYZ-坐标轴。绿色的线是交点线 (N)\"></p>\n<ul>\n<li>\\alpha  (进动角) 是 x - 轴与交点线的夹角</li>\n<li>\\beta  (章动角) 是 z - 轴与 Z - 轴的夹角</li>\n<li>\\gamma (自旋角) 是交点线与 X - 轴的夹角。</li>\n</ul>\n<p>简单点来说，就是分别围绕 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>x</mi><mi>y</mi><mi>z</mi></mrow><annotation encoding=\"application/x-tex\">xyz</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span></span></span></span> 轴进行旋转的角度。可以用来描述三维空间中的物体旋转。但是欧拉角又有静态和动态之分。</p>\n<p>静态欧拉角，即以固定的参考系（又称实验室参考系）来进行旋转。譬如，我们旋转一个物体，不管一个物体怎么旋转，我们整体的参考系并不会发生变化。</p>\n<p>但静态欧拉角对于描述场景中的物体旋转并不方便，譬如一个立方体使用世界坐标系（静态欧拉角）进行旋转后，我们只需要立方体根据其自己 z 轴再进行旋转，静态欧拉角便很难进行描述。</p>\n<p>因此我们还需要可以独立描述物体旋转的欧拉角，也就是动态欧拉角。即这时物体的 xyz 轴应该是跟着物体发生变化的。<br>\n<strong>注意，动态欧拉角的旋转顺序对于物体最终选择是有影响的，所以只有固定的顺序（同时也正是这个顺序导致了后续的万向锁问题）才能确定物体最终的旋转姿态。因为当第一次旋转发生时，它的其余坐标轴位置也发生了改变。</strong></p>\n<p>欧拉角旋转，在计算机中通常实现为 Y -&gt; X -&gt; Z。关于 Unity 中的旋转顺序网上资料参差不齐，有人说是 YXZ，也有人说是 ZXY。我们不妨自己打开 Unity 来试一下。</p>\n<p>我们先绕 Z 轴（蓝色）旋转 30 度。假设 Unity 的旋转顺序是 ZXY，那么此时我们旋转 X 轴，应该会和我们想象的一样，绕红轴进行旋转。<br>\n<img src=\"/image/ol1.gif\" alt=\"\"><br>\n很明显，立方体并非绕着 X 轴旋转，它最后的姿态，应该是先进行了 X 轴旋转，再对应进行了 Z 轴旋转。<br>\n我们再做一次实验。先绕 X 轴旋转 30 度，再旋转 Z 轴。<br>\n<img src=\"/image/ol2.gif\" alt=\"\"><br>\n我们可以看到这次立方体很好地绕着 Z 轴旋转。同理再试验一下与 Y 轴的对比，因此我们可以得到顺序是 YXZ。</p>\n<p><a href=\"https://baike.baidu.com/item/%E4%B8%87%E5%90%91%E9%94%81/15817326\" style=\"color: LimeGreen;\">万向锁</a>一旦选择 ±90° 作为 pitch 角，就会导致第一次旋转和第三次旋转等价，整个旋转表示系统被限制在只能绕竖直轴旋转，丢失了一个表示维度。</p>\n<p>万向锁纯读定义来说，确实有些让人费解。<br>\n如果你喜欢从数学上理解，不妨<a href=\"https://krasjet.github.io/quaternion/bonus_gimbal_lock.pdf\" style=\"color: LimeGreen;\">点击此处</a>读一读 krasjet 大佬的数学解释 。而我则从我更直观的感受上进行介绍。做个 1 分钟的物理实验即可。</p>\n<p>首先请读者拿出平时最常使用的手机，然后确定手机的物体坐标系朝向，假设 z 轴与手机屏幕垂直（手机平放于桌面）指向上方，手机较短的一条边为 x 轴，较长的一条边为 y 轴（方向由手机尾部指向头部），物体坐标系的原点是手机左下角的顶点。（注意旋转顺序为 zyx）</p>\n<p>绕 z 轴旋转任意角度（注意 x 和 y 轴也跟着一起旋转），再绕 y 轴旋转 90°，再绕 x 轴旋转任意角度。通过多次尝试，会发现一个共同点：z 轴永远是水平的， 通俗的说，手机永远也不会立起来（旋转形成的三维空间是固定的）！本来以为手机会指向任何方向，但实际上手机好像是被锁在桌面上，只能指向水平的某个方向，这个现象就称为万向锁。</p>\n<p>动态欧拉角必须按顺序旋转特性的一个体现，而万向锁正是一个极端案例。</p>\n<p>那么我们如何解决这个问题呢？<br>\n这就涉及到了四元数的概念。</p>\n<p><a href=\"https://baike.baidu.com/item/%E5%9B%9B%E5%85%83%E6%95%B0/5795379\" style=\"color: LimeGreen;\">四元数</a></p>\n<p>借助<a href=\"https://www.bilibili.com/video/BV1SW411y7W1?t=0.0\" style=\"color: LimeGreen;\">视频</a>很容易理解复数和四元数的几何意义，非常值得一看。如果你是一个数学爱好者，文字版的数学公式推导证明在<a href=\"https://krasjet.github.io/quaternion/quaternion.pdf\" style=\"color: LimeGreen;\">此处</a>。</p>\n<p>我学习之后的总结概括如下。</p>\n<p>简而言之，我们可以从四元数的几何意义出发去理解。四元数就好比四维世界的数字。</p>\n<p><strong>复数</strong></p>\n<p>复数的基本形式是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>z</mi><mo>=</mo><mi>a</mi><mo>+</mo><mi>b</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">z=a+bi</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mord mathnormal\">i</span></span></span></span>，比如 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3.14</mn><mo>+</mo><mn>1.59</mn><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">3.14+1.59i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">1</span><span class=\"mord\">4</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord\">.</span><span class=\"mord\">5</span><span class=\"mord\">9</span><span class=\"mord mathnormal\">i</span></span></span></span> 就是一个复数。它有一个虚数单位 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>，定义是 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>∗</mo><mi>i</mi><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i*i = -1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>。</p>\n<p>我们将其看作普通的平面坐标系，实数部分放置于 x 轴，虚数部分放置于 y 轴。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span> 乘以一个复数相当于将其逆时针旋转 90 度，即此时由 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>1</mn><mo>+</mo><mn>0</mn><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">1+0i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">i</span></span></span></span> 变到了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>+</mo><mn>1</mn><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">0+1i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\">i</span></span></span></span> 。继续逆时针旋转 90 度，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>0</mn><mo>+</mo><mn>1</mn><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">0+1i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\">i</span></span></span></span> 变为了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>−</mo><mn>1</mn><mo>+</mo><mn>0</mn><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">-1+0i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">i</span></span></span></span>，也就是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mo>∗</mo><mi>i</mi><mo>=</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">i*i = -1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord\">1</span></span></span></span>。所以复数相乘，就好比做矩阵变化（旋转 + 拉伸）。</p>\n<p>同理将其扩展到四元数，便好比在三维空间做变换（旋转 + 拉伸）。</p>\n<p>四元数乘法：（这也是我们告诉计算机该如何去计算它）</p>\n<p array=\"\">对于矩阵乘法，四元数乘法更加简洁<br>\n \\begin<ruby>array}{c}\ni<rp>【</rp><rt>{2</rt><rp>】</rp></ruby>=j^<ruby>2}=k<rp>【</rp><rt>{2</rt><rp>】</rp></ruby>=-1 \\<br>\ni j=-j i=k \\<br>\nk i=-i k=j \\<br>\nj k=-k j=i<br>\n\\end</p>\n<p><strong>四元数</strong><br>\n比如写一个四元数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>3.23</mn><mo>+</mo><mn>8.46</mn><mi>i</mi><mo>+</mo><mn>2.64</mn><mi>j</mi><mo>+</mo><mn>3.38</mn><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">3.23 + 8.46i + 2.64j + 3.38k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">2</span><span class=\"mord\">3</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord\">8</span><span class=\"mord\">.</span><span class=\"mord\">4</span><span class=\"mord\">6</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\">2</span><span class=\"mord\">.</span><span class=\"mord\">6</span><span class=\"mord\">4</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">.</span><span class=\"mord\">3</span><span class=\"mord\">8</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>（ <a href=\"https://en.wikipedia.org/wiki/William_Rowan_Hamilton\" style=\"color: LimeGreen;\">Hamilton </a>用了一个特殊的词来称呼没有标量部分只有 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi><mi>j</mi><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">i j k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 分量的四元数，一个之前没有在数学和物理中出现过的词，向量（Vector）。）</p>\n<p>对于旋转来说，我们通常使用单位四元数。</p>\n<p>单位四元数：<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mi>w</mi><mn>2</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup><mo>+</mo><msup><mi>z</mi><mn>2</mn></msup><mo>=</mo><mn>1</mn><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">w^2 + x^2 + y^2 + z^2 = 1 \\\\</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.008548em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8141079999999999em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span><span class=\"mspace newline\"></span></span></span><br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi><mo>=</mo><mn>0</mn><mo>+</mo><mn>0</mn><mi>i</mi><mo>+</mo><mn>1</mn><mi>j</mi><mo>+</mo><mn>0</mn><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">j = 0 + 0i + 1j + 0k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.74285em;vertical-align:-0.08333em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\">1</span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">0</span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span> 相当于绕 j 轴旋转了 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>9</mn><msup><mn>0</mn><mo>∘</mo></msup></mrow><annotation encoding=\"application/x-tex\">90^\\circ</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.674115em;vertical-align:0em;\"></span><span class=\"mord\">9</span><span class=\"mord\"><span class=\"mord\">0</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.674115em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mbin mtight\">∘</span></span></span></span></span></span></span></span></span></span></span>。<br>\n这时，只会对变换的向量进行旋转，而不会改变其本身的大小。（模长）<br>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>0</mn></msub><mo>+</mo><msub><mi>x</mi><mn>0</mn></msub><mi>i</mi><mo>+</mo><msub><mi>y</mi><mn>0</mn></msub><mi>j</mi><mo>+</mo><msub><mi>z</mi><mn>0</mn></msub><mi>k</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msub><mi>x</mi><mn>1</mn></msub><mi>i</mi><mo>+</mo><msub><mi>y</mi><mn>1</mn></msub><mi>j</mi><mo>+</mo><msub><mi>z</mi><mn>1</mn></msub><mi>k</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><msub><mi>w</mi><mn>0</mn></msub><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mi>i</mi><mo>−</mo><msub><mi>y</mi><mn>0</mn></msub><mi>j</mi><mo>−</mo><msub><mi>z</mi><mn>0</mn></msub><mi>k</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace></mrow><annotation encoding=\"application/x-tex\">(w_0+x_0i+y_0j+z_0k)(x_1i+y_1j+z_1k)(w_0-x_0i-y_0j-z_0k)\\\\</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">w</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.80952em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\">i</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03588em;\">y</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span></span></span><br>\n 作用：避免了欧拉角的歧义问题。</p>\n<ul>\n<li>优点：四元数旋转不受万向锁的影响。</li>\n<li>局限性：单个四元数不能表示任何方向超过 180 度的旋转。</li>\n<li>局限性：四元数的数字表示在直观上难以理解。</li>\n</ul>\n<p>我想从更加直观地感受上来描述一下，我们为什么使用四元数？<br>\n回顾一下，正如上文所说，单位四元数可以起到的作用是对三维空间物体进行旋转。</p>\n<p>而我们想要描述物体旋转，对于用户来说，欧拉角是最直观的方式。</p>\n<p>对于游戏引擎等来说，我们通常有一个世界坐标系，同时也希望子物体也有自己的坐标系，以便我们单独旋转子物体。这时我们不得不使用动态欧拉角。</p>\n<p>但是动态欧拉角有缺陷，因为它必须依照固定旋转顺序（如 YXZ），才能真正确定一个旋转。因此各种仿真模拟软件通常会有其自己的固定顺序，即便用户用不同的顺序去设置 XYZ，最后也根据软件自己实现的顺序来展示物体的旋转。<br>\n这样才能保证 XYZ 值，只确定一个旋转。</p>\n<p>因为旋转顺序固定，所以产生了万向锁。<br>\n因此我们需要一个东西它可以唯一确定并表达旋转，于是我们用到了四元数。<br>\n但对于用户来说，旋转场景中的物体要自己计算设置四元数显然是不友好的，因此 Unity 等方案都是在内部存储为四元数，而为了用户方便操作理解，UI 面板上则仍然使用欧拉角表示旋转（因此我们可以在软件里复现万向锁的表现），但我们只要自己知道旋转顺序，就可以在设置的时候避开它，设置出自己想要的旋转。</p>\n",
            "tags": [
                "四元数"
            ]
        }
    ]
}